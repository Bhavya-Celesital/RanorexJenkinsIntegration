///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SearchTests
{
    public partial class Recording4
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void switchCZechKeyboard()
        {
             System.Globalization.CultureInfo.CurrentUICulture = new System.Globalization.CultureInfo("cs-CZ");
       		 Report.Info("Switched to Czech keyboard layout.");
       		 

        }

        public void typeString(Adapter textField, string czechText)
        {
             try
    {
        // Ensure the text field is visible and enabled
        if (textField != null && textField.Element.Visible && textField.Element.Enabled)
        {
            // Click the text field to focus
            textField.Click();

            // Log message to confirm field interaction
            Report.Info("Clicked on the text field.");

            // Input Czech text into the field
            Keyboard.Press(czechText);

            // Log entered text
            Report.Info($"Entered Czech text: '{czechText}'");

            // Validate the entered text
            string actualText = textField.Element.GetAttributeValueText("Text");
            if (actualText == czechText)
            {
                Report.Success($"Text entered successfully: '{czechText}'");
            }
            else
            {
                Report.Failure($"Text validation failed. Expected: '{czechText}', Found: '{actualText}'");
            }
        }
        else
        {
            Report.Failure("The text field is either not visible or not enabled.");
        }
    }
    catch (Exception ex)
    {
        Report.Error($"Error occurred while entering Czech text: {ex.Message}");
    }
        }
        


    }
}
