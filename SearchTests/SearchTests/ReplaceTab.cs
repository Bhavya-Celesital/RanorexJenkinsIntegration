///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SearchTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ReplaceTab recording.
    /// </summary>
    [TestModule("1786dace-632c-471b-8d04-cdcc94d6f858", ModuleType.Recording, 1)]
    public partial class ReplaceTab : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SearchTestsRepository repository.
        /// </summary>
        public static SearchTestsRepository repo = SearchTestsRepository.Instance;

        static ReplaceTab instance = new ReplaceTab();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ReplaceTab()
        {
            Text_Find = "";
            Text_Replace = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ReplaceTab Instance
        {
            get { return instance; }
        }

#region Variables

        string _Text_Find;

        /// <summary>
        /// Gets or sets the value of variable Text_Find.
        /// </summary>
        [TestVariable("5a658c23-94dd-4c98-b2dc-6fe81b79faa5")]
        public string Text_Find
        {
            get { return _Text_Find; }
            set { _Text_Find = value; }
        }

        string _Text_Replace;

        /// <summary>
        /// Gets or sets the value of variable Text_Replace.
        /// </summary>
        [TestVariable("7716f9c0-f97e-46ba-80af-c9e076fef543")]
        public string Text_Replace
        {
            get { return _Text_Replace; }
            set { _Text_Replace = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Replace' at 34;4.", repo.HEXFindReplace.ReplaceInfo, new RecordItemIndex(0));
            repo.HEXFindReplace.Replace.Click("34;4");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Selected='True') on item 'HEXFindReplace.Replace'.", repo.HEXFindReplace.ReplaceInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.HEXFindReplace.ReplaceInfo, "Selected", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button' at 3;16.", repo.HEXFindReplace.ButtonInfo, new RecordItemIndex(2));
            repo.HEXFindReplace.Button.Click("3;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'Uedit64.German' and assigning its value to variable 'Text_Find'.", repo.Uedit64.GermanInfo, new RecordItemIndex(3));
            Text_Find = repo.Uedit64.German.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.German' at 9;14.", repo.Uedit64.GermanInfo, new RecordItemIndex(4));
            repo.Uedit64.German.Click("9;14");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Text_Find, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Text_Find) on item 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.HEXFindReplace.Text1687Info, "Text", Text_Find);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button1' at 15;11.", repo.HEXFindReplace.Button1Info, new RecordItemIndex(7));
            repo.HEXFindReplace.Button1.Click("15;11");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Get Value", "(Optional Action)\r\nGetting attribute 'Text' from item 'Uedit64.MenuItem47' and assigning its value to variable 'Text_Replace'.", repo.Uedit64.MenuItem47Info, new RecordItemIndex(8));
                Text_Replace = repo.Uedit64.MenuItem47.Element.GetAttributeValueText("Text");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "User", Text_Replace, new RecordItemIndex(9));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'Uedit64.MenuItem47' at 35;13.", repo.Uedit64.MenuItem47Info, new RecordItemIndex(10));
                repo.Uedit64.MenuItem47.Click("35;13");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text=$Text_Replace) on item 'HEXFindReplace.Text1695'.", repo.HEXFindReplace.Text1695Info, new RecordItemIndex(11));
                Validate.AttributeEqual(repo.HEXFindReplace.Text1695Info, "Text", Text_Replace, null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
