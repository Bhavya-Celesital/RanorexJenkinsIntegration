///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SearchTests
{
    public partial class FindTabRegularExpression
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public string UserCodeMethod(Adapter argument1, string Text)
        {
            // TODO: Replace the following line with your code implementation.
            //throw new NotImplementedException();
            string OptionText = argument1.Element.GetAttributeValueText("Text");
           // Report.Info("Option text " + OptionText);
            string firstword = OptionText.Split(' ')[0];
            firstword= firstword.Trim();
            //Report.Info("Extracted text "+ firstword);
            string combinedText = Text + firstword;
            Report.Info("combined text " +combinedText);
            return combinedText;
        }

        public string UserCodeMethod1(Adapter argument1, string Text)
        {
            // TODO: Replace the following line with your code implementation.
            //throw new NotImplementedException();
             string OptionText = argument1.Element.GetAttributeValueText("Text");
            //Report.Info("Option text " + OptionText);
            string firstword = OptionText.Split(' ')[0];
            firstword= firstword.Trim();
            //Report.Info("Extracted text "+ firstword);
            string combinedText = Text + firstword;
            Report.Info("combined text " +combinedText);
            return combinedText;
        }

        

        

        

    }
}
