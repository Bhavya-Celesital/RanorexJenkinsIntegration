///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SearchTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FindTabRegularExpression recording.
    /// </summary>
    [TestModule("75288e8e-c182-449c-ace2-10131d5e0281", ModuleType.Recording, 1)]
    public partial class FindTabRegularExpression : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SearchTestsRepository repository.
        /// </summary>
        public static SearchTestsRepository repo = SearchTestsRepository.Instance;

        static FindTabRegularExpression instance = new FindTabRegularExpression();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FindTabRegularExpression()
        {
            text = "";
            AddedRegularExpression = "";
            AddedRegularExpression2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FindTabRegularExpression Instance
        {
            get { return instance; }
        }

#region Variables

        string _text;

        /// <summary>
        /// Gets or sets the value of variable text.
        /// </summary>
        [TestVariable("06eb60dd-d009-4d80-af17-4d96071a355f")]
        public string text
        {
            get { return _text; }
            set { _text = value; }
        }

        string _AddedRegularExpression;

        /// <summary>
        /// Gets or sets the value of variable AddedRegularExpression.
        /// </summary>
        [TestVariable("0186e319-c4de-492d-9af3-80e9b7179223")]
        public string AddedRegularExpression
        {
            get { return _AddedRegularExpression; }
            set { _AddedRegularExpression = value; }
        }

        string _AddedRegularExpression2;

        /// <summary>
        /// Gets or sets the value of variable AddedRegularExpression2.
        /// </summary>
        [TestVariable("6c412aee-2641-4db5-a3a6-65fed36a8b0f")]
        public string AddedRegularExpression2
        {
            get { return _AddedRegularExpression2; }
            set { _AddedRegularExpression2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Text1687' at 140;16.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(0));
            repo.HEXFindReplace.Text1687.Click("140;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'test' with focus on 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(1));
            repo.HEXFindReplace.Text1687.PressKeys("test");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(2));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.FindASCII' at 6;6.", repo.HEXFindReplace.FindASCIIInfo, new RecordItemIndex(3));
            repo.HEXFindReplace.FindASCII.Click("6;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.RegularExpressionsASCIIOnly' at 6;6.", repo.HEXFindReplace.RegularExpressionsASCIIOnlyInfo, new RecordItemIndex(4));
            repo.HEXFindReplace.RegularExpressionsASCIIOnly.Click("6;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(5));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'HEXFindReplace.Text1687' and assigning its value to variable 'text'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(6));
            text = repo.HEXFindReplace.Text1687.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button2' at 10;15.", repo.HEXFindReplace.Button2Info, new RecordItemIndex(7));
            repo.HEXFindReplace.Button2.Click("10;15");
            Delay.Milliseconds(0);
            
            AddedRegularExpression = UserCodeMethod(repo.Uedit64.MenuItemPlusPlusZeroOrMorePreceding, text);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.MenuItemPlusPlusZeroOrMorePreceding' at 41;13.", repo.Uedit64.MenuItemPlusPlusZeroOrMorePrecedingInfo, new RecordItemIndex(9));
            repo.Uedit64.MenuItemPlusPlusZeroOrMorePreceding.Click("41;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AddedRegularExpression) on item 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.HEXFindReplace.Text1687Info, "Text", AddedRegularExpression);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(11));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button2' at 16;19.", repo.HEXFindReplace.Button2Info, new RecordItemIndex(12));
            repo.HEXFindReplace.Button2.Click("16;19");
            Delay.Milliseconds(0);
            
            AddedRegularExpression2 = UserCodeMethod1(repo.Uedit64.MenuItemAnySingleCharacterExceptN, AddedRegularExpression);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.MenuItemAnySingleCharacterExceptN' at Center.", repo.Uedit64.MenuItemAnySingleCharacterExceptNInfo, new RecordItemIndex(14));
            repo.Uedit64.MenuItemAnySingleCharacterExceptN.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AddedRegularExpression2) on item 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.HEXFindReplace.Text1687Info, "Text", AddedRegularExpression2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Back}' with focus on 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(16));
            repo.HEXFindReplace.Text1687.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Back}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
