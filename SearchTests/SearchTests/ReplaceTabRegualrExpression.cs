///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SearchTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ReplaceTabRegualrExpression recording.
    /// </summary>
    [TestModule("9697a7c4-6477-47c3-af37-d2148d66a913", ModuleType.Recording, 1)]
    public partial class ReplaceTabRegualrExpression : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SearchTestsRepository repository.
        /// </summary>
        public static SearchTestsRepository repo = SearchTestsRepository.Instance;

        static ReplaceTabRegualrExpression instance = new ReplaceTabRegualrExpression();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ReplaceTabRegualrExpression()
        {
            Text = "";
            AddedRegularExpression = "";
            AddedRegularExpression2 = "";
            Replace_Text = "";
            Replace_AddedRegularExpression = "";
            Replace_AddedRegularExpression2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ReplaceTabRegualrExpression Instance
        {
            get { return instance; }
        }

#region Variables

        string _Text;

        /// <summary>
        /// Gets or sets the value of variable Text.
        /// </summary>
        [TestVariable("5d388a82-a544-41c1-949b-2f0a75d27ece")]
        public string Text
        {
            get { return _Text; }
            set { _Text = value; }
        }

        string _AddedRegularExpression;

        /// <summary>
        /// Gets or sets the value of variable AddedRegularExpression.
        /// </summary>
        [TestVariable("99b891ed-be2f-42d9-9f72-5e71ebb7535b")]
        public string AddedRegularExpression
        {
            get { return _AddedRegularExpression; }
            set { _AddedRegularExpression = value; }
        }

        string _AddedRegularExpression2;

        /// <summary>
        /// Gets or sets the value of variable AddedRegularExpression2.
        /// </summary>
        [TestVariable("69ec3979-5ef6-47f4-843c-b4df09e306ef")]
        public string AddedRegularExpression2
        {
            get { return _AddedRegularExpression2; }
            set { _AddedRegularExpression2 = value; }
        }

        string _Replace_Text;

        /// <summary>
        /// Gets or sets the value of variable Replace_Text.
        /// </summary>
        [TestVariable("923df08f-f91f-4cce-9167-6f81743198c9")]
        public string Replace_Text
        {
            get { return _Replace_Text; }
            set { _Replace_Text = value; }
        }

        string _Replace_AddedRegularExpression;

        /// <summary>
        /// Gets or sets the value of variable Replace_AddedRegularExpression.
        /// </summary>
        [TestVariable("f9c7d0ca-6238-41c8-8382-6093d45533b2")]
        public string Replace_AddedRegularExpression
        {
            get { return _Replace_AddedRegularExpression; }
            set { _Replace_AddedRegularExpression = value; }
        }

        string _Replace_AddedRegularExpression2;

        /// <summary>
        /// Gets or sets the value of variable Replace_AddedRegularExpression2.
        /// </summary>
        [TestVariable("a48c68c2-a37a-434d-a593-a900550c170f")]
        public string Replace_AddedRegularExpression2
        {
            get { return _Replace_AddedRegularExpression2; }
            set { _Replace_AddedRegularExpression2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Replace' at 34;4.", repo.HEXFindReplace.ReplaceInfo, new RecordItemIndex(0));
            repo.HEXFindReplace.Replace.Click("34;4");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Selected='True') on item 'HEXFindReplace.Replace'.", repo.HEXFindReplace.ReplaceInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.HEXFindReplace.ReplaceInfo, "Selected", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Text1687' at 47;16.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(2));
            repo.HEXFindReplace.Text1687.Click("47;16");
            Delay.Milliseconds(0);
            
            // Find What Textfield
            Report.Log(ReportLevel.Info, "Section", "Find What Textfield", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'test' with focus on 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(4));
            repo.HEXFindReplace.Text1687.PressKeys("test");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button2' at 9;16.", repo.HEXFindReplace.Button2Info, new RecordItemIndex(5));
            repo.HEXFindReplace.Button2.Click("9;16");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'HEXFindReplace.Text1687' and assigning its value to variable 'Text'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(6));
            Text = repo.HEXFindReplace.Text1687.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            AddedRegularExpression = UserCodeMethod(repo.Uedit64.Popup.MenuItemPlusOneOrMorePrecedingChar, Text);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.Popup.MenuItemPlusOneOrMorePrecedingChar' at 80;17.", repo.Uedit64.Popup.MenuItemPlusOneOrMorePrecedingCharInfo, new RecordItemIndex(8));
            repo.Uedit64.Popup.MenuItemPlusOneOrMorePrecedingChar.Click("80;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AddedRegularExpression) on item 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.HEXFindReplace.Text1687Info, "Text", AddedRegularExpression);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button2' at 3;15.", repo.HEXFindReplace.Button2Info, new RecordItemIndex(10));
            repo.HEXFindReplace.Button2.Click("3;15");
            Delay.Milliseconds(0);
            
            AddedRegularExpression2 = UserCodeMethod1(repo.Uedit64.Popup.MenuItemPercentStartOfLine, AddedRegularExpression);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.Popup.MenuItemPercentStartOfLine' at 78;5.", repo.Uedit64.Popup.MenuItemPercentStartOfLineInfo, new RecordItemIndex(12));
            repo.Uedit64.Popup.MenuItemPercentStartOfLine.Click("78;5");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$AddedRegularExpression2) on item 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.HEXFindReplace.Text1687Info, "Text", AddedRegularExpression2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Back}' with focus on 'HEXFindReplace.Text1687'.", repo.HEXFindReplace.Text1687Info, new RecordItemIndex(14));
            repo.HEXFindReplace.Text1687.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Back}");
            Delay.Milliseconds(0);
            
            // Replace With  Textfield
            Report.Log(ReportLevel.Info, "Section", "Replace With  Textfield", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Text1695' at 218;15.", repo.HEXFindReplace.Text1695Info, new RecordItemIndex(16));
            repo.HEXFindReplace.Text1695.Click("218;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'testing' with focus on 'HEXFindReplace.Text1695'.", repo.HEXFindReplace.Text1695Info, new RecordItemIndex(17));
            repo.HEXFindReplace.Text1695.PressKeys("testing");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'HEXFindReplace.Text1695' and assigning its value to variable 'Replace_Text'.", repo.HEXFindReplace.Text1695Info, new RecordItemIndex(18));
            Replace_Text = repo.HEXFindReplace.Text1695.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button3' at 4;14.", repo.HEXFindReplace.Button3Info, new RecordItemIndex(19));
            repo.HEXFindReplace.Button3.Click("4;14");
            Delay.Milliseconds(0);
            
            Replace_AddedRegularExpression = UserCodeMethod2(repo.Uedit64.Popup.MenuItemCaretrCarriageReturnCROnly, Replace_Text);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.Popup.MenuItemCaretrCarriageReturnCROnly' at 63;18.", repo.Uedit64.Popup.MenuItemCaretrCarriageReturnCROnlyInfo, new RecordItemIndex(21));
            repo.Uedit64.Popup.MenuItemCaretrCarriageReturnCROnly.Click("63;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Replace_AddedRegularExpression) on item 'HEXFindReplace.Text1695'.", repo.HEXFindReplace.Text1695Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.HEXFindReplace.Text1695Info, "Text", Replace_AddedRegularExpression);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(23));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HEXFindReplace.Button3' at 13;11.", repo.HEXFindReplace.Button3Info, new RecordItemIndex(24));
            repo.HEXFindReplace.Button3.Click("13;11");
            Delay.Milliseconds(0);
            
            Replace_AddedRegularExpression2 = UserCodeMethod3(repo.Uedit64.Popup.MenuItemCaretnLineFeedLFOnlyUnix, Replace_AddedRegularExpression);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Uedit64.Popup.MenuItemCaretnLineFeedLFOnlyUnix' at 43;4.", repo.Uedit64.Popup.MenuItemCaretnLineFeedLFOnlyUnixInfo, new RecordItemIndex(26));
            repo.Uedit64.Popup.MenuItemCaretnLineFeedLFOnlyUnix.Click("43;4");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$Replace_AddedRegularExpression2) on item 'HEXFindReplace.Text1695'.", repo.HEXFindReplace.Text1695Info, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.HEXFindReplace.Text1695Info, "Text", Replace_AddedRegularExpression2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}{Back}' with focus on 'HEXFindReplace.Text1695'.", repo.HEXFindReplace.Text1695Info, new RecordItemIndex(28));
            repo.HEXFindReplace.Text1695.PressKeys("{LControlKey down}{Akey}{LControlKey up}{Back}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
